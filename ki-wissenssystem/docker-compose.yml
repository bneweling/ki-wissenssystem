services:
  neo4j:
    image: neo4j:5-community
    container_name: ki-wissenssystem-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_server_memory_pagecache_size=512M
      - NEO4J_server_memory_heap_max__size=512M
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - ki-network
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: ki-wissenssystem-chromadb
    ports:
      - "8000:8000"
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - ki-network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/api/v2/heartbeat"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  redis:
    image: redis:7-alpine
    container_name: ki-wissenssystem-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ki-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build: .
    container_name: ki-wissenssystem-api
    ports:
      - "8080:8080"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - ki-network
    depends_on:
      neo4j:
        condition: service_healthy
      chromadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: ki-wissenssystem-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - ki-network
    depends_on:
      - api

networks:
  ki-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  chroma_data:
  redis_data: